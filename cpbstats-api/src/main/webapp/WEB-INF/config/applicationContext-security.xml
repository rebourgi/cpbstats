<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd">

	<bean id="mapper" class="org.dozer.DozerBeanMapper">
		<property name="mappingFiles">
			<list>
				<value>dozer/dozer-mapping.xml</value>
			</list>
		</property>
	</bean>
	
	<security:global-method-security
		pre-post-annotations="enabled" />

	<security:http auto-config="true" use-expressions="true"
		entry-point-ref="http403EntryPoint">
		
		<security:intercept-url pattern="/rest/authentication/login*" access="permitAll" />
        <security:intercept-url pattern="/api-docs/swagger.json" access="permitAll" />
        <security:intercept-url pattern="/swagger-ui/**" access="permitAll" />
		<security:intercept-url pattern="/**" access="isAuthenticated()" />

		<security:logout delete-cookies="JSESSIONID" logout-url="/perform_logout" />
	</security:http>
	
<!-- 	<bean id="preauthAuthProvider"
		class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<property name="preAuthenticatedUserDetailsService">
			<bean id="userDetailsServiceWrapper"
				class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<property name="userDetailsService" ref="userDetailsService" />
			</bean>
		</property>
	</bean>
	
	
	<property name="hideUserNotFoundExceptions" value="true"/>
 -->
 
 	<!-- Redirect if authentication fails -->
	<bean id="entryPoint"
		class="org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint">
		<constructor-arg>
			<map>
				<entry>
					<key>
						<bean class="fr.cpbstats.api.security.ServicesRequestMatcher" />
					</key>
					<bean
						class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />
				</entry>
			</map>
		</constructor-arg>
		<property name="defaultEntryPoint">
			<bean
				class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />
		</property>
	</bean>
	<bean id="userDetailsService"
		class="fr.cpbstats.api.security.UserSecurityService" />

	<bean id="http403EntryPoint"
		class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />



	<security:authentication-manager alias="authenticationManager" erase-credentials="true">
		<security:authentication-provider user-service-ref="userDetailsService" />
	</security:authentication-manager>
	
	
</beans>